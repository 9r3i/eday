<?php
 class kdbServer{ const version="\x31\x2e\x32\x2e\x32"; const expires=60; static public function start($l=0){ @set_time_limit(${"\x6c"}); self::header(); if(isset(${"\x5f\x50\x4f\x53\x54"}["\x6b\x64\x62"])){ return self::load(); }return false; } static private function load(){ ${"\x69\x73\x41\x6a\x61\x78"}=isset(${"\x5f\x47\x45\x54"}["\x63\x6c\x69\x65\x6e\x74"])&&${"\x5f\x47\x45\x54"}["\x63\x6c\x69\x65\x6e\x74"]=="\x61\x6a\x61\x78"?true:false; ${"\x72\x65\x73"}=array("\x73\x74\x61\x74\x75\x73"=>"\x65\x72\x72\x6f\x72","\x6d\x65\x73\x73\x61\x67\x65"=>"\x69\x6e\x76\x61\x6c\x69\x64\x20\x72\x65\x71\x75\x65\x73\x74"); ${"\x67\x65\x74"}=!${"\x69\x73\x41\x6a\x61\x78"}?self::decode(${"\x5f\x50\x4f\x53\x54"}["\x6b\x64\x62"]):json_decode(base64_decode(${"\x5f\x50\x4f\x53\x54"}["\x6b\x64\x62"]),true); if(isset(${"\x67\x65\x74"}["\x75\x73\x65\x72"],${"\x67\x65\x74"}["\x70\x61\x73\x73"],${"\x67\x65\x74"}["\x64\x62"],${"\x67\x65\x74"}["\x74\x69\x6d\x65\x7a\x6f\x6e\x65"])){ ${"\x6b\x64\x62"}=new kdb("\x6c\x6f\x63\x61\x6c\x68\x6f\x73\x74",${"\x67\x65\x74"}["\x75\x73\x65\x72"],${"\x67\x65\x74"}["\x70\x61\x73\x73"],${"\x67\x65\x74"}["\x64\x62"],${"\x67\x65\x74"}["\x74\x69\x6d\x65\x7a\x6f\x6e\x65"]); if(${"\x6b\x64\x62"}->{"\x65\x72\x72\x6f\x72"}){ ${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]=${"\x6b\x64\x62"}->{"\x65\x72\x72\x6f\x72"}; }elseif(${"\x6b\x64\x62"}->{"\x73\x65\x73\x73\x69\x6f\x6e"}()){ ${"\x76\x61\x6c"}=serialize(array( "\x75\x73\x65\x72"=>${"\x67\x65\x74"}["\x75\x73\x65\x72"], "\x70\x61\x73\x73"=>${"\x67\x65\x74"}["\x70\x61\x73\x73"], "\x64\x62"=>${"\x67\x65\x74"}["\x64\x62"], "\x74\x69\x6d\x65\x7a\x6f\x6e\x65"=>${"\x67\x65\x74"}["\x74\x69\x6d\x65\x7a\x6f\x6e\x65"], )); self::swift(); ${"\x75\x73\x65\x72"}=isset(${"\x67\x65\x74"}["\x66\x6f\x72\x63\x65"])&&$get["\x66\x6f\x72\x63\x65"]===true?false:self::read(${"\x76\x61\x6c"}); ${"\x73\x65\x73\x73\x69\x6f\x6e"}=${"\x75\x73\x65\x72"}?${"\x75\x73\x65\x72"}:${"\x6b\x64\x62"}->{"\x73\x65\x73\x73\x69\x6f\x6e"}(); ${"\x72\x65\x73"}["\x73\x74\x61\x74\x75\x73"]="\x4f\x4b"; ${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]="\x63\x6f\x6e\x6e\x65\x63\x74\x65\x64"; ${"\x72\x65\x73"}["\x73\x65\x73\x73\x69\x6f\x6e"]=${"\x73\x65\x73\x73\x69\x6f\x6e"}; ${"\x72\x65\x73"}["\x73\x63\x6f\x70\x65"]=${"\x6b\x64\x62"}->{"\x73\x63\x6f\x70\x65"}(); ${"\x72\x65\x73"}["\x61\x63\x63\x65\x73\x73"]=${"\x6b\x64\x62"}->{"\x61\x63\x63\x65\x73\x73"}(); ${"\x72\x65\x73"}["\x69\x6e\x66\x6f"]=self::info(); if(!${"\x75\x73\x65\x72"}){ ${"\x65\x78\x70\x69\x72\x65\x73"}=isset(${"\x67\x65\x74"}["\x65\x78\x70\x69\x72\x65\x73"])?(int)${"\x67\x65\x74"}["\x65\x78\x70\x69\x72\x65\x73"]:self::expires; self::write(self::dir()."\x73\x65\x72\x76\x65\x72\x2e\x73\x65\x73\x73\x69\x6f\x6e\x2e\x6c\x6f\x67",${"\x73\x65\x73\x73\x69\x6f\x6e"}."\x3a".self::encode(array( "\x64\x62"=>${"\x67\x65\x74"}["\x64\x62"], "\x75\x73\x65\x72"=>${"\x67\x65\x74"}["\x75\x73\x65\x72"], "\x70\x61\x73\x73"=>${"\x67\x65\x74"}["\x70\x61\x73\x73"], "\x74\x69\x6d\x65\x7a\x6f\x6e\x65"=>${"\x67\x65\x74"}["\x74\x69\x6d\x65\x7a\x6f\x6e\x65"], "\x65\x78\x70\x69\x72\x65\x73"=>time()+${"\x65\x78\x70\x69\x72\x65\x73"}, ))."\n","\x61"); } if(isset(${"\x67\x65\x74"}["\x71\x75\x65\x72\x79"])||isset(${"\x67\x65\x74"}["\x71\x75\x65\x72\x69\x65\x73"])){ ${"\x67\x65\x74"}["\x73\x65\x73\x73\x69\x6f\x6e"]=${"\x73\x65\x73\x73\x69\x6f\x6e"}; return self::session(${"\x67\x65\x74"},${"\x72\x65\x73"}); } }else{ ${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]="\x75\x6e\x6b\x6e\x6f\x77\x6e\x20\x65\x72\x72\x6f\x72"; }return self::result(!${"\x69\x73\x41\x6a\x61\x78"}?self::encode(${"\x72\x65\x73"}):base64_encode(json_encode(${"\x72\x65\x73"}))); }elseif(isset(${"\x67\x65\x74"}["\x73\x65\x73\x73\x69\x6f\x6e"])){ return self::session(${"\x67\x65\x74"}); }return self::result(!${"\x69\x73\x41\x6a\x61\x78"}?self::encode(${"\x72\x65\x73"}):base64_encode(json_encode(${"\x72\x65\x73"}))); } static private function session($get=null,$con=null){ ${"\x69\x73\x41\x6a\x61\x78"}=isset(${"\x5f\x47\x45\x54"}["\x63\x6c\x69\x65\x6e\x74"])&&${"\x5f\x47\x45\x54"}["\x63\x6c\x69\x65\x6e\x74"]=="\x61\x6a\x61\x78"?true:false; ${"\x72\x65\x73"}=array("\x73\x74\x61\x74\x75\x73"=>"\x65\x72\x72\x6f\x72","\x6d\x65\x73\x73\x61\x67\x65"=>"\x69\x6e\x76\x61\x6c\x69\x64\x20\x72\x65\x71\x75\x65\x73\x74"); if(isset(${"\x67\x65\x74"}["\x73\x65\x73\x73\x69\x6f\x6e"])){ ${"\x75\x73\x65\x72"}=self::read(${"\x67\x65\x74"}["\x73\x65\x73\x73\x69\x6f\x6e"]); if(!isset(${"\x75\x73\x65\x72"}["\x64\x62"])){ ${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]="\x69\x6e\x76\x61\x6c\x69\x64\x20\x73\x65\x73\x73\x69\x6f\x6e\x20\x74\x6f\x6b\x65\x6e"; return self::result(!${"\x69\x73\x41\x6a\x61\x78"}?self::encode(${"\x72\x65\x73"}):base64_encode(json_encode(${"\x72\x65\x73"}))); } if(isset(${"\x75\x73\x65\x72"}["\x65\x78\x70\x69\x72\x65\x73"])&&$user["\x65\x78\x70\x69\x72\x65\x73"]<time()){ ${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]="\x73\x65\x73\x73\x69\x6f\x6e\x20\x74\x6f\x6b\x65\x6e\x20\x77\x61\x73\x20\x65\x78\x70\x69\x72\x65\x64"; return self::result(!${"\x69\x73\x41\x6a\x61\x78"}?self::encode(${"\x72\x65\x73"}):base64_encode(json_encode(${"\x72\x65\x73"}))); } if(self::lock(${"\x67\x65\x74"}["\x73\x65\x73\x73\x69\x6f\x6e"])){ ${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]="\x64\x61\x74\x61\x62\x61\x73\x65\x20\x69\x73\x20\x6c\x6f\x63\x6b\x65\x64"; return self::result(!${"\x69\x73\x41\x6a\x61\x78"}?self::encode(${"\x72\x65\x73"}):base64_encode(json_encode(${"\x72\x65\x73"}))); } if(isset(${"\x67\x65\x74"}["\x71\x75\x65\x72\x79"])||isset(${"\x67\x65\x74"}["\x71\x75\x65\x72\x69\x65\x73"])){ ${"\x6b\x64\x62"}=new kdb("\x6c\x6f\x63\x61\x6c\x68\x6f\x73\x74",${"\x75\x73\x65\x72"}["\x75\x73\x65\x72"],${"\x75\x73\x65\x72"}["\x70\x61\x73\x73"],${"\x75\x73\x65\x72"}["\x64\x62"],${"\x75\x73\x65\x72"}["\x74\x69\x6d\x65\x7a\x6f\x6e\x65"]); if(${"\x6b\x64\x62"}->{"\x65\x72\x72\x6f\x72"}){ ${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]=${"\x6b\x64\x62"}->{"\x65\x72\x72\x6f\x72"}; self::lock(${"\x67\x65\x74"}["\x73\x65\x73\x73\x69\x6f\x6e"],true); return self::result(!${"\x69\x73\x41\x6a\x61\x78"}?self::encode(${"\x72\x65\x73"}):base64_encode(json_encode(${"\x72\x65\x73"}))); } if(isset(${"\x67\x65\x74"}["\x71\x75\x65\x72\x79"])){ ${"\x65\x78\x65\x63"}=${"\x6b\x64\x62"}->{"\x71\x75\x65\x72\x79"}(${"\x67\x65\x74"}["\x71\x75\x65\x72\x79"]); if(${"\x6b\x64\x62"}->{"\x65\x72\x72\x6f\x72"}){ ${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]=${"\x6b\x64\x62"}->{"\x65\x72\x72\x6f\x72"}; }else{ ${"\x72\x65\x73"}["\x73\x74\x61\x74\x75\x73"]="\x4f\x4b"; ${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]="\x71\x75\x65\x72\x79\x20\x77\x61\x73\x20\x65\x78\x65\x63\x75\x74\x65\x64"; ${"\x72\x65\x73"}["\x72\x65\x73\x75\x6c\x74"]=${"\x65\x78\x65\x63"}; ${"\x72\x65\x73"}["\x65\x72\x72\x6f\x72\x73"]=${"\x6b\x64\x62"}->{"\x65\x72\x72\x6f\x72\x73"}; ${"\x72\x65\x73"}["\x65\x72\x72\x6f\x72"]=${"\x6b\x64\x62"}->{"\x65\x72\x72\x6f\x72"}; ${"\x72\x65\x73"}["\x69\x6e\x66\x6f"]=self::info(); if(isset(${"\x63\x6f\x6e"})){ ${"\x72\x65\x73"}["\x73\x65\x73\x73\x69\x6f\x6e"]=${"\x63\x6f\x6e"}["\x73\x65\x73\x73\x69\x6f\x6e"]; ${"\x72\x65\x73"}["\x73\x63\x6f\x70\x65"]=${"\x63\x6f\x6e"}["\x73\x63\x6f\x70\x65"]; ${"\x72\x65\x73"}["\x61\x63\x63\x65\x73\x73"]=${"\x63\x6f\x6e"}["\x61\x63\x63\x65\x73\x73"]; } } self::lock(${"\x67\x65\x74"}["\x73\x65\x73\x73\x69\x6f\x6e"],true); return self::result(!${"\x69\x73\x41\x6a\x61\x78"}?self::encode(${"\x72\x65\x73"}):base64_encode(json_encode(${"\x72\x65\x73"}))); } elseif(isset(${"\x67\x65\x74"}["\x71\x75\x65\x72\x69\x65\x73"])){ ${"\x65\x78\x65\x63"}=${"\x6b\x64\x62"}->{"\x71\x75\x65\x72\x69\x65\x73"}(${"\x67\x65\x74"}["\x71\x75\x65\x72\x69\x65\x73"]); ${"\x72\x65\x73"}["\x73\x74\x61\x74\x75\x73"]="\x4f\x4b"; ${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]="\x71\x75\x65\x72\x69\x65\x73\x20\x77\x65\x72\x65\x20\x65\x78\x65\x63\x75\x74\x65\x64"; ${"\x72\x65\x73"}["\x72\x65\x73\x75\x6c\x74"]=${"\x65\x78\x65\x63"}; ${"\x72\x65\x73"}["\x65\x72\x72\x6f\x72\x73"]=${"\x6b\x64\x62"}->{"\x65\x72\x72\x6f\x72\x73"}; ${"\x72\x65\x73"}["\x65\x72\x72\x6f\x72"]=${"\x6b\x64\x62"}->{"\x65\x72\x72\x6f\x72"}; ${"\x72\x65\x73"}["\x69\x6e\x66\x6f"]=self::info(); if(isset(${"\x63\x6f\x6e"})){ ${"\x72\x65\x73"}["\x73\x65\x73\x73\x69\x6f\x6e"]=${"\x63\x6f\x6e"}["\x73\x65\x73\x73\x69\x6f\x6e"]; ${"\x72\x65\x73"}["\x73\x63\x6f\x70\x65"]=${"\x63\x6f\x6e"}["\x73\x63\x6f\x70\x65"]; ${"\x72\x65\x73"}["\x61\x63\x63\x65\x73\x73"]=${"\x63\x6f\x6e"}["\x61\x63\x63\x65\x73\x73"]; } self::lock(${"\x67\x65\x74"}["\x73\x65\x73\x73\x69\x6f\x6e"],true); return self::result(!${"\x69\x73\x41\x6a\x61\x78"}?self::encode(${"\x72\x65\x73"}):base64_encode(json_encode(${"\x72\x65\x73"}))); } }${"\x72\x65\x73"}["\x6d\x65\x73\x73\x61\x67\x65"]="\x6e\x6f\x74\x20\x65\x6e\x6f\x75\x67\x68\x20\x61\x72\x67\x75\x6d\x65\x6e\x74"; }return self::result(!${"\x69\x73\x41\x6a\x61\x78"}?self::encode(${"\x72\x65\x73"}):base64_encode(json_encode(${"\x72\x65\x73"}))); } static private function lock($s=null,$u=false){ if(is_string(${"\x73"})&&preg_match("\x2f\x5e\x6b\x64\x62\x5c\x2d\x5b\x61\x2d\x7a\x41\x2d\x5a\x30\x2d\x39\x5d\x2b\x24\x2f",${"\x73"})){ ${"\x66"}=self::dir()."\x73\x65\x72\x76\x65\x72\x2e\x75\x73\x65\x72\x73\x2e\x6c\x6f\x67"; ${"\x6f"}=@fopen(${"\x66"},(is_file(${"\x66"})?"\x72\x2b":"\x77\x2b")); @flock(${"\x6f"},LOCK_EX); ${"\x72"}=false; if(${"\x75"}){ ${"\x74"}=@fopen("\x70\x68\x70\x3a\x2f\x2f\x74\x65\x6d\x70","\x72\x2b"); while(!@feof(${"\x6f"})){ ${"\x67"}=@fgets(${"\x6f"}); if(trim(${"\x67"})==''){continue;} if(trim(${"\x67"})!==${"\x73"}){@fwrite(${"\x74"},${"\x67"});} } @ftruncate(${"\x6f"},0); @fseek(${"\x6f"},0); @fseek(${"\x74"},0); stream_copy_to_stream(${"\x74"},${"\x6f"}); ${"\x72"}=true; }else{ while(!@feof(${"\x6f"})){ ${"\x67"}=@fgets(${"\x6f"}); if(trim(${"\x67"})==''){continue;} if(trim(${"\x67"})==${"\x73"}){${"\x72"}=true;break;} } if(!${"\x72"}){${"\x77"}=@fwrite(${"\x6f"},${"\x73"}."\n");} } @flock(${"\x6f"},LOCK_UN); @fclose(${"\x6f"}); return ${"\x72"}; }return false; } static private function info(){ return array( "\x6b\x64\x62\x3a\x3a\x76\x65\x72\x73\x69\x6f\x6e"=>kdb::version, "\x6b\x64\x62\x53\x65\x72\x76\x65\x72\x3a\x3a\x76\x65\x72\x73\x69\x6f\x6e"=>kdbServer::version, "\x70\x68\x70\x3a\x3a\x76\x65\x72\x73\x69\x6f\x6e"=>kdb::php_version, "\x72\x65\x71\x75\x65\x73\x74\x5f\x6c\x65\x6e\x67\x74\x68"=>strlen(${"\x5f\x50\x4f\x53\x54"}["\x6b\x64\x62"]), "\x6d\x65\x6d\x6f\x72\x79\x5f\x75\x73\x61\x67\x65"=>number_format(memory_get_usage()/1024,2,"\x2e",''), "\x6d\x65\x6d\x6f\x72\x79\x5f\x70\x65\x61\x6b\x5f\x75\x73\x61\x67\x65"=>number_format(memory_get_peak_usage()/1024,2,"\x2e",''), "\x70\x72\x6f\x63\x65\x73\x73\x5f\x74\x69\x6d\x65"=>number_format(microtime(true)-${"\x5f\x53\x45\x52\x56\x45\x52"}["\x52\x45\x51\x55\x45\x53\x54\x5f\x54\x49\x4d\x45\x5f\x46\x4c\x4f\x41\x54"],3,"\x2e",''), "\x72\x65\x6d\x6f\x74\x65\x5f\x61\x64\x64\x72"=>${"\x5f\x53\x45\x52\x56\x45\x52"}["\x52\x45\x4d\x4f\x54\x45\x5f\x41\x44\x44\x52"], ); } static private function result($e=null){ header("\x48\x54\x54\x50\x2f\x31\x2e\x31\x20\x32\x30\x30\x20\x4f\x4b"); header("\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x4c\x65\x6e\x67\x74\x68\x3a\x20".strlen(${"\x65"})); exit(${"\x65"}); } static private function header(){ header("\x41\x63\x63\x65\x73\x73\x2d\x43\x6f\x6e\x74\x72\x6f\x6c\x2d\x41\x6c\x6c\x6f\x77\x2d\x4f\x72\x69\x67\x69\x6e\x3a\x20\x2a"); header("\x41\x63\x63\x65\x73\x73\x2d\x43\x6f\x6e\x74\x72\x6f\x6c\x2d\x52\x65\x71\x75\x65\x73\x74\x2d\x4d\x65\x74\x68\x6f\x64\x3a\x20\x50\x4f\x53\x54\x2c\x20\x47\x45\x54\x2c\x20\x4f\x50\x54\x49\x4f\x4e\x53"); header("\x41\x63\x63\x65\x73\x73\x2d\x43\x6f\x6e\x74\x72\x6f\x6c\x2d\x52\x65\x71\x75\x65\x73\x74\x2d\x48\x65\x61\x64\x65\x72\x73\x3a\x20\x58\x2d\x50\x49\x4e\x47\x4f\x54\x48\x45\x52\x2c\x20\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x54\x79\x70\x65"); header("\x41\x63\x63\x65\x73\x73\x2d\x43\x6f\x6e\x74\x72\x6f\x6c\x2d\x4d\x61\x78\x2d\x41\x67\x65\x3a\x20\x38\x36\x34\x30\x30"); header("\x41\x63\x63\x65\x73\x73\x2d\x43\x6f\x6e\x74\x72\x6f\x6c\x2d\x41\x6c\x6c\x6f\x77\x2d\x43\x72\x65\x64\x65\x6e\x74\x69\x61\x6c\x73\x3a\x20\x74\x72\x75\x65"); header("\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x54\x79\x70\x65\x3a\x20\x74\x65\x78\x74\x2f\x70\x6c\x61\x69\x6e\x3b\x63\x68\x61\x72\x73\x65\x74\x3d\x75\x74\x66\x2d\x38\x3b"); if(isset(${"\x5f\x53\x45\x52\x56\x45\x52"}["\x52\x45\x51\x55\x45\x53\x54\x5f\x4d\x45\x54\x48\x4f\x44"])&&strtoupper(${"\x5f\x53\x45\x52\x56\x45\x52"}["\x52\x45\x51\x55\x45\x53\x54\x5f\x4d\x45\x54\x48\x4f\x44"])=="\x4f\x50\x54\x49\x4f\x4e\x53"){ header("\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x4c\x61\x6e\x67\x75\x61\x67\x65\x3a\x20\x65\x6e\x2d\x55\x53"); header("\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x45\x6e\x63\x6f\x64\x69\x6e\x67\x3a\x20\x67\x7a\x69\x70"); header("\x43\x6f\x6e\x74\x65\x6e\x74\x2d\x4c\x65\x6e\x67\x74\x68\x3a\x20\x30"); header("\x56\x61\x72\x79\x3a\x20\x41\x63\x63\x65\x70\x74\x2d\x45\x6e\x63\x6f\x64\x69\x6e\x67\x2c\x20\x4f\x72\x69\x67\x69\x6e"); header("\x48\x54\x54\x50\x2f\x31\x2e\x31\x20\x32\x30\x30\x20\x4f\x4b"); exit; } } static private function swift(){ ${"\x66"}=self::dir()."\x73\x65\x72\x76\x65\x72\x2e\x73\x65\x73\x73\x69\x6f\x6e\x2e\x6c\x6f\x67"; if(!is_file(${"\x66"})){self::write(${"\x66"});} ${"\x6f"}=@fopen(${"\x66"},"\x72\x2b"); ${"\x74"}=@fopen("\x70\x68\x70\x3a\x2f\x2f\x74\x65\x6d\x70","\x72\x2b"); @flock(${"\x6f"},LOCK_EX); ${"\x65"}=0; while(!@feof(${"\x6f"})){ ${"\x67"}=trim(fgets(${"\x6f"})); if(${"\x67"}==''){continue;} if(!preg_match("\x2f\x28\x6b\x64\x62\x5c\x2d\x5b\x61\x2d\x7a\x41\x2d\x5a\x30\x2d\x39\x5d\x2b\x29\x3a\x28\x5b\x61\x2d\x7a\x41\x2d\x5a\x30\x2d\x39\x5c\x2b\x5c\x2f\x3d\x5d\x2b\x29\x2f",${"\x67"},${"\x61"})){continue;} ${"\x64"}=self::decode(${"\x61"}[2]); if(isset(${"\x64"}["\x65\x78\x70\x69\x72\x65\x73"])&&(int)${"\x64"}["\x65\x78\x70\x69\x72\x65\x73"]>time()){@fwrite(${"\x74"},${"\x67"}."\n");} else{${"\x65"}++;} } if(${"\x65"}>0){ @ftruncate(${"\x6f"},0); fseek(${"\x6f"},0); fseek(${"\x74"},0); stream_copy_to_stream(${"\x74"},${"\x6f"}); } @flock(${"\x6f"},LOCK_UN); @fclose(${"\x6f"}); return true; } static private function read($s=null){ if(is_string(${"\x73"})){ ${"\x6b\x65\x79"}=preg_match("\x2f\x5e\x6b\x64\x62\x5c\x2d\x5b\x61\x2d\x7a\x41\x2d\x5a\x30\x2d\x39\x5d\x2b\x24\x2f",${"\x73"})?${"\x73"}:false; ${"\x76\x61\x6c"}=@unserialize(${"\x73"}); ${"\x66"}=self::dir()."\x73\x65\x72\x76\x65\x72\x2e\x73\x65\x73\x73\x69\x6f\x6e\x2e\x6c\x6f\x67"; if(!is_file(${"\x66"})){self::write(${"\x66"});} ${"\x6f"}=@fopen(${"\x66"},"\x72"); @flock(${"\x6f"},LOCK_EX); ${"\x72\x65\x73"}=false; while(!@feof(${"\x6f"})){ ${"\x67"}=trim(fgets(${"\x6f"})); if(${"\x67"}==''){continue;} if(!preg_match("\x2f\x28\x6b\x64\x62\x5c\x2d\x5b\x61\x2d\x7a\x41\x2d\x5a\x30\x2d\x39\x5d\x2b\x29\x3a\x28\x5b\x61\x2d\x7a\x41\x2d\x5a\x30\x2d\x39\x5c\x2b\x5c\x2f\x3d\x5d\x2b\x29\x2f",${"\x67"},${"\x61"})){continue;} if(${"\x6b\x65\x79"}){ if(${"\x6b\x65\x79"}==${"\x61"}[1]){${"\x72\x65\x73"}=self::decode(${"\x61"}[2]);break;} }else{ ${"\x64"}=self::decode(${"\x61"}[2]);${"\x6d"}=0; foreach((array)${"\x76\x61\x6c"} as $k=>${"\x76"}){ if(isset(${"\x64"}[${"\x6b"}])&&$d[${"\x6b"}]==${"\x76"}){${"\x6d"}++;} } if(${"\x6d"}==count(${"\x76\x61\x6c"})){${"\x72\x65\x73"}=${"\x61"}[1];break;} } }@flock(${"\x6f"},LOCK_UN); @fclose(${"\x6f"}); return ${"\x72\x65\x73"}; }return false; } static private function decode($s=null,$a=true){ if(isset(${"\x73"})){ return unserialize(base64_decode(trim(${"\x73"}))); }return false; } static private function encode($s=null){ if(isset(${"\x73"})){ return base64_encode(serialize(${"\x73"})); }return false; } static private function dir(){ ${"\x64"}=defined("\x4b\x44\x42\x5f\x43\x4c\x49\x5f\x44\x49\x52")?KDB_CLI_DIR:__DIR__; ${"\x64"}=str_replace('\\',"\x2f",${"\x64"}); ${"\x64"}.=substr(${"\x64"},-1)!="\x2f"?"\x2f":''; return ${"\x64"}; } static private function write($f=null,$c='',$t="\x77\x62"){ if(isset(${"\x66"})&&$p=@fopen(${"\x66"},${"\x74"})){ @flock(${"\x70"},LOCK_EX); ${"\x77"}=@fwrite(${"\x70"},${"\x63"}); @flock(${"\x70"},LOCK_UN); @fclose(${"\x70"}); }return isset(${"\x77"})&&$w?true:false; } } 