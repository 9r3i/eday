<?php
/* class theme for e-Day admin
 * started at august 27th 2018
 */
return new theme;
class theme{
  public function repair($ns=null){
    global $title,$files,$error,$namespace;
    $namespace=$ns;
    $files=self::files($ns);
    $error=$files?false:'Failed to get theme files.';
    if(EDAY_ADMIN_TYPE!=='master'&&EDAY_ADMIN_TYPE!=='admin'){
      $error='Have no access to this page.';
    }
    $title='Theme Reparation';
    admin::html('header');
    admin::html('menu');
    admin::html('theme-repair');
    admin::html('footer');
    return true;
  }
  public function config($ns=null){
    global $title,$config,$error,$namespace;
    $config=self::configData($ns);
    $namespace=$ns;
    $error=$config?false:'Failed to get theme config.';
    if(EDAY_ADMIN_TYPE!=='master'&&EDAY_ADMIN_TYPE!=='admin'){
      $error='Have no access to this page.';
    }
    $title='Theme Configuration';
    admin::html('header');
    admin::html('menu');
    admin::html('theme-config');
    admin::html('footer');
    return true;
  }
  public function all(){
    global $title,$themes,$error;
    $themes=unserialize(EDAY_THEMES);
    $error=false;
    if(EDAY_ADMIN_TYPE!=='master'&&EDAY_ADMIN_TYPE!=='admin'){
      $error='Have no access to this page.';
    }
    $title='Themes';
    admin::html('header');
    admin::html('menu');
    admin::html('theme-all');
    admin::html('footer');
    return true;
  }
  public function ajax(){
    if(EDAY_ADMIN_TYPE!=='master'&&EDAY_ADMIN_TYPE!=='admin'){
      return self::error('Have no access to this page.');
    }
    $valid=['activateTheme','saveThemeConfig','fileContent','saveFile'];
    if(!isset($_POST['request'])
      ||!in_array($_POST['request'],$valid)
      ||!method_exists($this,$_POST['request'])){
      return self::error('Invalid request.');
    }return @\call_user_func_array([self,$_POST['request']],[]);
  }
  private static function saveFile(){
    if(!isset($_POST['namespace'],$_POST['file'],$_POST['content'])
      ||!preg_match('/^[a-z0-9]+$/',$_POST['namespace'])
      ||preg_match('/^\./',$_POST['file'])){
      return self::error('Invalid data request.');
    }$themes=unserialize(EDAY_THEMES);
    if(!array_key_exists($_POST['namespace'],$themes)){
      return self::error('Theme is not available.');
    }$path=EDAY_THEME_DIR.$_POST['namespace'].'/'.$_POST['file'];
    if(!is_file($path)){
      return self::error('File is not available.');
    }$data=@file_get_contents($path);
    if(md5($data)==md5($_POST['content'])){
      return self::error('Content has no changed.');
    }$put=@file_put_contents($path,$_POST['content']);
    if(!$put){
      return self::error('Failed to save file.');
    }return self::result();
  }
  private static function fileContent(){
    if(!isset($_POST['namespace'],$_POST['file'])
      ||!preg_match('/^[a-z0-9]+$/',$_POST['namespace'])
      ||preg_match('/^\./',$_POST['file'])){
      return self::error('Invalid data request.');
    }$themes=unserialize(EDAY_THEMES);
    if(!array_key_exists($_POST['namespace'],$themes)){
      return self::error('Theme is not available.');
    }$path=EDAY_THEME_DIR.$_POST['namespace'].'/'.$_POST['file'];
    if(!is_file($path)){
      return self::error('File is not available.');
    }$data=@file_get_contents($path);
    if(!$data){
      return self::error('Failed to get file content.');
    }return self::result($data);
  }
  private static function saveThemeConfig(){
    if(!isset($_POST['namespace'],$_POST['data'])||!preg_match('/^[a-z0-9]+$/',$_POST['namespace'])){
      return self::error('Invalid data request.');
    }$themes=unserialize(EDAY_THEMES);
    if(!array_key_exists($_POST['namespace'],$themes)){
      return self::error('Theme is not available.');
    }$data=@json_decode($_POST['data'],true);
    if(!is_array($data)){
      return self::error('Failed to parse data configuration.');
    }$ns=$_POST['namespace'];
    $path=EDAY_THEME_DIR.$ns.'/'.$themes[$ns]->config;
    $temp=['; generated by e-Day at '.date('Y-m-d H:i:s')];
    foreach($data as $type=>$inner){
      $temp[]="\r\n".'['.$type.']';
      foreach($inner as $key=>$value){
        $value=trim($value);
        if(!empty($value)&&!preg_match('/^\d+$/',$value)){
          $value='"'.preg_replace('/"/','\\"',$value).'"';
        }$temp[]=$key.'='.$value;
      }
    }$content=implode("\r\n",$temp)."\r\n\r\n\r\n";
    $put=@file_put_contents($path,$content);
    if(!$put){
      return self::error('Failed to save configuration.');
    }return self::result();
  }
  private static function activateTheme(){
    if(!isset($_POST['namespace'])||!preg_match('/^[a-z0-9]+$/',$_POST['namespace'])){
      return self::error('Invalid namespace.');
    }
    $themes=unserialize(EDAY_THEMES);
    if(!array_key_exists($_POST['namespace'],$themes)){
      return self::error('Theme is not available.');
    }
    $db=site::db();
    $upd=$db->query('update site '.http_build_query([
      'theme'=>'string('.$_POST['namespace'].')'
    ]).' where id=1');
    if(!$upd||$db->error){
      return self::error($db->error?$db->error:'Failed to activate the theme.');
    }return self::result();
  }
  private static function files($ns=null){
    if(!is_string($ns)){return false;}
    $t=@unserialize(EDAY_THEMES);
    $dir=EDAY_THEME_DIR.$ns.'/';
    if(!$t||!isset($t[$ns])||!is_dir($dir)){return false;}
    return self::explore($dir);
  }
  private static function explore($d=null){
    $s=@array_diff(@scandir($d),['.','..']);
    $s=is_array($s)?$s:[];$r=[];
    foreach($s as $f){
      if(is_file($d.$f)){
        if(preg_match(self::excludePattern(),$f)){
          continue;
        }$r[]=$d.$f;
      }elseif(is_dir($d.$f)){
        $n=self::explore($d.$f.'/');
        $r=array_merge($r,$n);
      }
    }return $r;
  }
  private static function excludePattern(){
    $r=[
      'ttf','woff','woff2','eot',
      'jpg','jpeg','png','gif','ico',
    ];return '/\.('.implode('|',$r).')$/i';
  }
  private static function configData($ns=null){
    if(!is_string($ns)){return false;}
    $t=(object)@unserialize(EDAY_THEMES);
    $path=EDAY_THEME_DIR.$ns.'/'.$t->$ns->config;
    if(!is_file($path)){return false;}
    $ini=@parse_ini_file($path,true);
    if(!is_array($ini)){return false;}
    return $ini;
  }
  private static function error($s=null){
    $s=is_string($s)?$s:'Unknown error.';
    return self::result('Error: '.$s);
  }
  private static function result($s=null){
    $s=is_string($s)?$s:'OK';
    header('Content-Type: text/plain');
    header('Content-Length: '.strlen($s));
    header('HTTP/1.1 200 OK');
    exit($s);
  }
}
