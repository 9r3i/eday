<?php
/* class base for e-day
 * started at august 27th 2018
 */
class base{
  /* parse menu 
   * @param $menus - must be an array, generated by parseMenuChildren
   * @example:
       $sel=$db->query('SELECT * FROM `menus`');
       $parsed=base::parseMenuChildren($sel);
       $menus=base::parseMenu($parsed);
   */
  public static function parseMenu($menus=null,$pr=0){
    if(!is_array($menus)){return false;}
    $x=isset($menus[$pr])?$menus[$pr]:[];
    unset($menus[$pr]);$r=[];
    foreach($x as $k=>$v){
      if(isset($menus[$k])){
        $v[2]=\call_user_func_array([__CLASS__,__METHOD__],[$menus,$k]);
      }
      if($pr){$r[$k]=$v;}
      else{$r[$v[3]][$k]=$v;}
    }return $r;
  }
  /* parse menu children
   * - result array for parseMenu
   * require menu keys:
   * - int id
   * - string name
   * - string uri
   * - string type
   * - int parent
   */
  public static function parseMenuChildren($menus=null){
    if(!is_array($menus)){return false;}
    $r=[];
    foreach($menus as $menu){
      $n=[$menu['uri'],$menu['name'],[],$menu['type']];
      $r[$menu['parent']][$menu['id']]=$n;
    }return $r;
  }
  /* price */
  public static function price($s=null){
    if(!is_numeric($s)&&!is_string($s)){$s=0;}
    $d=str_split((string)$s);
    $i=count($d);$r='';$c=0;
    while($i--){
      $c++;
      if($c>=3){$c=0;$r=','.$d[$i].$r;}
      else{$r=$d[$i].$r;}
    }return preg_replace('/^[^0-9]+/','',$r);
  }
  /* time ago */
  public static function timeAgo($str=null){
    if(!is_int($str)&&!is_string($str)){return false;}
    $time=preg_match('/^\d+$/',(string)$str)?(int)$str:strtotime((string)$str);
    $now=time();$range=$now-$time;
    $minute=floor($range/60);
    $hour=floor($minute/60);
    $day=floor($hour/24);
    $date=date('d',$time);
    $month=date('m',$time);
    $year=date('Y',$time);
    $moon=date('m')-$month;
    if($range<60){return 'Just now';}
    elseif($minute<60){
      return ($minute<2?'A':$minute).' minute'.($minute>1?'s':'').' ago';
    }elseif($hour<24&&$date==date('d')){
      return ($hour<2?'An':$hour).' hour'.($hour>1?'s':'').' ago';
    }elseif($day<date('t')&&$moon<2&&$year==date('Y')){
      $week=date('W')-date('W',$time);
      if(date('d')-$date==1){
        return 'Yesterday at '.date('H:i',$time);
      }elseif($week==0||date('d')-$date<3){
        return date('l',$time).' at '.date('H:i',$time);
      }elseif($week==1){
        return 'Last week on '.date('l',$time).' at '.date('H:i',$time);
      }return $week.' weeks ago on '.date('l',$time);
    }elseif($year==date('Y')){
      if($moon<2){
        return 'Last month on '.date('F jS',$time);
      }return date('F jS',$time);
    }elseif(date('Y')-$year==1){
      return 'Last year on '.date('F jS',$time);;
    }return date('F jS Y',$time);
  }
}
